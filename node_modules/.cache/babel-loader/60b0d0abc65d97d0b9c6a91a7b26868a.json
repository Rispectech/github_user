{"ast":null,"code":"var _jsxFileName = \"/home/rishabh/Desktop/github-users/src/context/context.js\";\nimport React, { useState, useEffect } from \"react\";\nimport mockUser from \"./mockData.js/mockUser\";\nimport mockRepos from \"./mockData.js/mockRepos\";\nimport mockFollowers from \"./mockData.js/mockFollowers\";\nimport axios from \"axios\";\nconst rootUrl = \"https://api.github.com\";\nconst GithubContext = React.createContext();\n\nconst GithubProvider = ({\n  children\n}) => {\n  const [gitHubUser, setGitHubUser] = useState(mockUser);\n  const [repos, setRepos] = useState(mockRepos);\n  const [gitHubFollowers, setGitHubFollowers] = useState(mockFollowers); //request and loading\n\n  const [request, setRequest] = useState(0);\n  const [loading, setLoading] = useState(false); // error\n\n  const [error, setError] = useState({\n    show: false,\n    msg: \"\"\n  }); //no of requests\n\n  const checkRequest = () => {\n    axios(`${rootUrl}/rate_limit`).then(({\n      data: {\n        rate: {\n          remaining: rem\n        }\n      }\n    }) => {\n      setRequest(rem);\n      console.log(rem);\n\n      if (rem === 0) {\n        setError({\n          show: true,\n          msg: \"Sorry u have excessed your hourly limit rate \"\n        });\n      }\n    }).catch(err => console.error(err));\n  };\n\n  const searchGithubUser = async user => {\n    setLoading(true);\n    setError({\n      show: false,\n      msg: \"\"\n    });\n    setLoading(true);\n    const response = await axios(`${rootUrl}/users/${user}`).catch(err => console.log(err));\n\n    if (response) {\n      setGitHubUser(response.data);\n      console.log(response);\n      const {\n        login,\n        followers_url\n      } = response.data; //repos\n      // await axios(`${rootUrl}/users/${login}/repos?per_page = 100`)\n      //   .then((item) => setRepos(item.data))\n      //   .catch((err) => console.log(err))\n      // //followers\n      // await axios(`${followers_url}?per_page=100`)\n      //   .then((item) => setGitHubFollowers(item.data))\n      //   .catch((err) => console.log(err))\n\n      await Promise.allSettled([axios(`${rootUrl}/users/${login}/repos?per_page = 100`), axios(`${followers_url}?per_page=100`)]).then(result => {\n        console.log(result);\n        const [repos, followers] = result; // console.log(repos.value.data, followers.value.data);\n\n        if (repos.status == \"fulfilled\") setRepos(repos.value.data);\n        if (followers.status == \"fulfilled\") setGitHubFollowers(followers.value.data);\n      });\n    } else {\n      setError({\n        show: true,\n        msg: \"Any User with this Github Id doesn't exist\"\n      });\n    }\n\n    console.log(request); // checkRequest()\n\n    setLoading(false);\n  };\n\n  useEffect(checkRequest, [GithubContext]);\n  return /*#__PURE__*/React.createElement(GithubContext.Provider, {\n    value: {\n      gitHubUser,\n      gitHubFollowers,\n      repos,\n      request,\n      error,\n      loading,\n      searchGithubUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport { GithubContext, GithubProvider };","map":{"version":3,"sources":["/home/rishabh/Desktop/github-users/src/context/context.js"],"names":["React","useState","useEffect","mockUser","mockRepos","mockFollowers","axios","rootUrl","GithubContext","createContext","GithubProvider","children","gitHubUser","setGitHubUser","repos","setRepos","gitHubFollowers","setGitHubFollowers","request","setRequest","loading","setLoading","error","setError","show","msg","checkRequest","then","data","rate","remaining","rem","console","log","catch","err","searchGithubUser","user","response","login","followers_url","Promise","allSettled","result","followers","status","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport mockUser from \"./mockData.js/mockUser\";\r\nimport mockRepos from \"./mockData.js/mockRepos\";\r\nimport mockFollowers from \"./mockData.js/mockFollowers\";\r\nimport axios from \"axios\";\r\n\r\nconst rootUrl = \"https://api.github.com\";\r\n\r\nconst GithubContext = React.createContext();\r\n\r\nconst GithubProvider = ({ children }) => {\r\n  const [gitHubUser, setGitHubUser] = useState(mockUser);\r\n  const [repos, setRepos] = useState(mockRepos);\r\n  const [gitHubFollowers, setGitHubFollowers] = useState(mockFollowers);\r\n\r\n  //request and loading\r\n  const [request, setRequest] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  // error\r\n  const [error, setError] = useState({ show: false, msg: \"\" });\r\n\r\n  //no of requests\r\n  const checkRequest = () => {\r\n    axios(`${rootUrl}/rate_limit`)\r\n      .then(\r\n        ({\r\n          data: {\r\n            rate: { remaining: rem },\r\n          },\r\n        }) => {\r\n          setRequest(rem);\r\n          console.log(rem);\r\n          if (rem === 0) {\r\n            setError({\r\n              show: true,\r\n              msg: \"Sorry u have excessed your hourly limit rate \",\r\n            });\r\n          }\r\n        }\r\n      )\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const searchGithubUser = async (user) => {\r\n    setLoading(true);\r\n    setError({ show: false, msg: \"\" });\r\n    setLoading(true);\r\n    const response = await axios(`${rootUrl}/users/${user}`).catch((err) =>\r\n      console.log(err)\r\n    );\r\n    if (response) {\r\n      setGitHubUser(response.data);\r\n      console.log(response);\r\n      const { login, followers_url } = response.data;\r\n      //repos\r\n      // await axios(`${rootUrl}/users/${login}/repos?per_page = 100`)\r\n      //   .then((item) => setRepos(item.data))\r\n      //   .catch((err) => console.log(err))\r\n      // //followers\r\n      // await axios(`${followers_url}?per_page=100`)\r\n      //   .then((item) => setGitHubFollowers(item.data))\r\n      //   .catch((err) => console.log(err))\r\n      await Promise.allSettled([\r\n        axios(`${rootUrl}/users/${login}/repos?per_page = 100`),\r\n        axios(`${followers_url}?per_page=100`),\r\n      ]).then((result) => {\r\n        console.log(result);\r\n        const [repos, followers] = result;\r\n        // console.log(repos.value.data, followers.value.data);\r\n\r\n        if (repos.status == \"fulfilled\") setRepos(repos.value.data);\r\n        if (followers.status == \"fulfilled\")\r\n          setGitHubFollowers(followers.value.data);\r\n      });\r\n    } else {\r\n      setError({\r\n        show: true,\r\n        msg: \"Any User with this Github Id doesn't exist\",\r\n      });\r\n    }\r\n    console.log(request);\r\n    // checkRequest()\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(checkRequest, [GithubContext]);\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        gitHubUser,\r\n        gitHubFollowers,\r\n        repos,\r\n        request,\r\n        error,\r\n        loading,\r\n        searchGithubUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n\r\nexport { GithubContext, GithubProvider };\r\n"]},"metadata":{},"sourceType":"module"}