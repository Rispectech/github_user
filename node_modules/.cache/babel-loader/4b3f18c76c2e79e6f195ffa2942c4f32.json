{"ast":null,"code":"var _jsxFileName = \"/home/rishabh/Desktop/github-users/src/components/Repos.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { GithubContext } from '../context/context';\nimport { ExampleChart, Pie3D, Column3D, Bar3D, Doughnut2D } from './Charts';\n\nconst Repos = () => {\n  const {\n    repos\n  } = React.useContext(GithubContext); // console.log(repos)\n\n  const chartData = [{\n    label: 'HTML',\n    value: '13'\n  }, {\n    label: 'CSS',\n    value: '360'\n  }, {\n    label: 'Javascript',\n    value: '480'\n  }]; // MOST POPULAR LANGUAGE //\n\n  var mostlyUsedObject = repos.reduce((acc, value) => {\n    const {\n      language,\n      stargazers_count\n    } = value;\n    if (!language) return acc;\n    if (!acc[language]) acc[language] = {\n      label: language,\n      value: 1,\n      stars: stargazers_count\n    };else {\n      acc[language] = { ...acc[language],\n        value: acc[language].value + 1,\n        stars: acc[language].stars + stargazers_count\n      };\n    } // console.log(acc)\n\n    return acc;\n  }, {});\n  const mostlyUsed = Object.values(mostlyUsedObject).sort((a, b) => b.value - a.value).slice(0, 5); // console.log(mostlyUsed)\n  //STARS\n\n  const mostlyUsed_doughnut = Object.values(mostlyUsedObject).sort((a, b) => {\n    return b.stars - a.stars;\n  }).map(item => {\n    const {\n      label,\n      stars\n    } = item;\n    return {\n      label,\n      value: stars\n    };\n  }).slice(0, 5); // console.log(mostlyUsed_doughnut, mostlyUsed)\n  //my approach - stars and forks\n  // var stars = repos.reduce((acc, value) => {\n  //   const { language, stargazers_count } = value\n  //   if (!language) return acc\n  //   console.log(language, stargazers_count)\n  //   if (!acc[language])\n  //     acc[language] = { label: language, value: stargazers_count }\n  //   else acc[language].value += stargazers_count\n  //   return acc\n  // }, {})\n  // console.log(stars)\n  // var mostPopularObject = repos.reduce((acc, value) => {\n  //   const { name, stargazers_count, forks } = value\n  //   acc[name] = { label: name, value: stargazers_count, forks: forks }\n  //   return acc\n  // }, {})\n  // const mostPopularColumn = Object.values(mostPopularObject)\n  //   .sort((a, b) => b.value - a.value)\n  //   .slice(0, 5)\n  // // console.log(mostPopularColumn)\n  // const mostPopularBar = Object.values(mostPopularObject)\n  //   .sort((a, b) => b.forks - a.forks)\n  //   .map((item) => {\n  //     const { label, forks } = item\n  //     return { label, value: forks }\n  //   })\n  //   .slice(0, 5)\n  // console.log(mostPopularBar)\n  //STARS AND FORKS - optimised approach\n\n  let {\n    stars,\n    forks\n  } = repos.reduce((acc, item) => {\n    const {\n      name,\n      stargazers_count,\n      forks\n    } = item;\n    acc.stars[name] = {\n      label: name,\n      value: stargazers_count\n    };\n    acc.forks[name] = {\n      label: name,\n      value: forks\n    };\n    return acc;\n  }, {\n    stars: {},\n    forks: {}\n  });\n  stars = Object.values(stars).sort((a, b) => b.value - a.value).slice(0, 5);\n  forks = Object.values(forks).sort((a, b) => b.value - a.value).slice(0, 5); // console.log(stars, forks)\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pie3D, {\n    data: mostlyUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Column3D, {\n    data: stars,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Doughnut2D, {\n    data: mostlyUsed_doughnut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Bar3D, {\n    data: forks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  justify-items: center;\n  gap: 2rem;\n  @media (min-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: 2fr 3fr;\n  }\n\n  div {\n    width: 100% !important;\n  }\n  .fusioncharts-container {\n    width: 100% !important;\n  }\n  svg {\n    width: 100% !important;\n    border-radius: var(--radius) !important;\n  }\n`;\nexport default Repos;","map":{"version":3,"sources":["/home/rishabh/Desktop/github-users/src/components/Repos.js"],"names":["React","styled","GithubContext","ExampleChart","Pie3D","Column3D","Bar3D","Doughnut2D","Repos","repos","useContext","chartData","label","value","mostlyUsedObject","reduce","acc","language","stargazers_count","stars","mostlyUsed","Object","values","sort","a","b","slice","mostlyUsed_doughnut","map","item","forks","name","Wrapper","div"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { GithubContext } from '../context/context'\r\nimport { ExampleChart, Pie3D, Column3D, Bar3D, Doughnut2D } from './Charts'\r\nconst Repos = () => {\r\n  const { repos } = React.useContext(GithubContext)\r\n  // console.log(repos)\r\n\r\n  const chartData = [\r\n    {\r\n      label: 'HTML',\r\n      value: '13',\r\n    },\r\n    {\r\n      label: 'CSS',\r\n      value: '360',\r\n    },\r\n    {\r\n      label: 'Javascript',\r\n      value: '480',\r\n    },\r\n  ]\r\n\r\n  // MOST POPULAR LANGUAGE //\r\n  var mostlyUsedObject = repos.reduce((acc, value) => {\r\n    const { language, stargazers_count } = value\r\n\r\n    if (!language) return acc\r\n    if (!acc[language])\r\n      acc[language] = { label: language, value: 1, stars: stargazers_count }\r\n    else {\r\n      acc[language] = {\r\n        ...acc[language],\r\n        value: acc[language].value + 1,\r\n        stars: acc[language].stars + stargazers_count,\r\n      }\r\n    }\r\n    // console.log(acc)\r\n    return acc\r\n  }, {})\r\n  const mostlyUsed = Object.values(mostlyUsedObject)\r\n    .sort((a, b) => b.value - a.value)\r\n    .slice(0, 5)\r\n  // console.log(mostlyUsed)\r\n\r\n  //STARS\r\n\r\n  const mostlyUsed_doughnut = Object.values(mostlyUsedObject)\r\n    .sort((a, b) => {\r\n      return b.stars - a.stars\r\n    })\r\n    .map((item) => {\r\n      const { label, stars } = item\r\n      return { label, value: stars }\r\n    })\r\n    .slice(0, 5)\r\n\r\n  // console.log(mostlyUsed_doughnut, mostlyUsed)\r\n\r\n  //my approach - stars and forks\r\n\r\n  // var stars = repos.reduce((acc, value) => {\r\n  //   const { language, stargazers_count } = value\r\n  //   if (!language) return acc\r\n  //   console.log(language, stargazers_count)\r\n  //   if (!acc[language])\r\n  //     acc[language] = { label: language, value: stargazers_count }\r\n  //   else acc[language].value += stargazers_count\r\n  //   return acc\r\n  // }, {})\r\n\r\n  // console.log(stars)\r\n\r\n  // var mostPopularObject = repos.reduce((acc, value) => {\r\n  //   const { name, stargazers_count, forks } = value\r\n  //   acc[name] = { label: name, value: stargazers_count, forks: forks }\r\n  //   return acc\r\n  // }, {})\r\n\r\n  // const mostPopularColumn = Object.values(mostPopularObject)\r\n  //   .sort((a, b) => b.value - a.value)\r\n  //   .slice(0, 5)\r\n  // // console.log(mostPopularColumn)\r\n\r\n  // const mostPopularBar = Object.values(mostPopularObject)\r\n  //   .sort((a, b) => b.forks - a.forks)\r\n  //   .map((item) => {\r\n  //     const { label, forks } = item\r\n  //     return { label, value: forks }\r\n  //   })\r\n  //   .slice(0, 5)\r\n  // console.log(mostPopularBar)\r\n\r\n  //STARS AND FORKS - optimised approach\r\n\r\n  let { stars, forks } = repos.reduce(\r\n    (acc, item) => {\r\n      const { name, stargazers_count, forks } = item\r\n      acc.stars[name] = { label: name, value: stargazers_count }\r\n      acc.forks[name] = { label: name, value: forks }\r\n      return acc\r\n    },\r\n    { stars: {}, forks: {} }\r\n  )\r\n\r\n  stars = Object.values(stars)\r\n    .sort((a, b) => b.value - a.value)\r\n    .slice(0, 5)\r\n  forks = Object.values(forks)\r\n    .sort((a, b) => b.value - a.value)\r\n    .slice(0, 5)\r\n\r\n  // console.log(stars, forks)\r\n\r\n  return (\r\n    <section className='section'>\r\n      <Wrapper className='section-center'>\r\n        <Pie3D data={mostlyUsed} />\r\n        <Column3D data={stars} />\r\n        <Doughnut2D data={mostlyUsed_doughnut} />\r\n        <Bar3D data={forks} />\r\n      </Wrapper>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  justify-items: center;\r\n  gap: 2rem;\r\n  @media (min-width: 800px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    grid-template-columns: 2fr 3fr;\r\n  }\r\n\r\n  div {\r\n    width: 100% !important;\r\n  }\r\n  .fusioncharts-container {\r\n    width: 100% !important;\r\n  }\r\n  svg {\r\n    width: 100% !important;\r\n    border-radius: var(--radius) !important;\r\n  }\r\n`\r\n\r\nexport default Repos\r\n"]},"metadata":{},"sourceType":"module"}